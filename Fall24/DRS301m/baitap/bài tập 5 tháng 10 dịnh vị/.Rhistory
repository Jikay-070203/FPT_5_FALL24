``{r}
``{r}
library(data.table)
data(quakes)
summary(quekes)
library(data.table)
data(quekes)
summary(quekes)
library(data.table)
data(quakes)
summary(quakes)
# Biểu đồ histogram
# Biểu đồ phân tán
ggplot(quakes, aes(x = depth, y = mag)) +
geom_point(alpha = 0.6, color = "blue") +
labs(title = "Biểu đồ phân tán Depth và Mag",
x = "Depth (km)",
y = "Mag") +
theme_minimal()
# Biểu đồ histogram
ggplot(quakes, aes(x = depth, y = mag)) +
geom_point(alpha = 0.6, color = "blue") +
labs(title = "Bieu do phan tan Depth va Mag",
x= "Depth (km)", y = "Mag") +
theme_minimal()
# Biểu đồ histogram
ggplot(quakes, aes(x = depth, y = mag)) +
geom_point(alpha = 0.6, color = "blue") +
labs(title = "Bieu do phan tan Depth va Mag",
x= "Depth (km)", y = "Mag") +
theme_minimal()
# Biểu đồ histogram
ggplot(quakes, aes(x = depth, y = mag)) +
geom_point(alpha = 0.6, color = "blue") +
labs(title = "Bieu do phan tan Depth va Mag",
x= "Depth (km)", y = "Mag") +
theme_minimal()
# Biểu đồ histogram
ggplot(quakes, aes(x = depth, y = mag)) +
geom_point(alpha = 0.6, color = "blue") +
labs(title = "Bieu do phan tan Depth va Mag",
x= "Depth (km)", y = "Mag") +
theme_minimal()
install.packages("ggplot2")
library(ggplot2)
# Biểu đồ histogram
ggplot(quakes, aes(x = depth, y = mag)) +
geom_point(alpha = 0.6, color = "blue") +
labs(title = "Bieu do phan tan Depth va Mag",
x= "Depth (km)", y = "Mag") +
theme_minimal()
#install.packages("leaflet")
# Cài đặt và load thư viện leaflet
library(leaflet)
install.packages("leaflet")
# Cài đặt và load thư viện leaflet
library(leaflet)
head(quakes)
ggplot(quakes, aes(x = depth, y = mag)) +
geom_point(alpha = 0.6, color = "blue") +
labs(title = "Bieu do phan tan Depth va Mag",
x= "Depth (km)", y = "Mag") +
theme_minimal()
# Biểu đồ histogram
# Biểu đồ histogram
ggplot(quakes, aes(x = mag)) +
geom_histogram(binwidth = 0.2, fill = "orange", color = "black") +
labs(title = "Histogram of Earthquake Magnitude",
x = "Cường độ (magnitude)",  # X-axis label in Vietnamese
y = "Tần suất") +            # Y-axis label in Vietnamese
theme_minimal()
install.packages("leaflet")
# Cài đặt và load thư viện leaflet
library(leaflet)
install.packages("leaflet")
# Cài đặt và load thư viện leaflet
library(leaflet)
install.packages("leaflet")
# Tạo bản đồ động đất
leaflet(quakes) %>%
addTiles() %>%
addCircles(
lat = ~lat, lng = ~long, weight = 1, radius = ~mag * 5000,
color = ~ifelse(mag >= 5, "red", "blue"),
popup = ~paste("Magnitude:", mag, "<br>", "Depth:", depth, "km")
) %>%
setView(lng = 180, lat = -20, zoom = 4)
# Tạo bản đồ động đất
leaflet(quakes) %>%
addTiles() %>%
addCircles(
lat = ~lat, lng = ~long, weight = 1, radius = ~mag * 5000,
color = ~ifelse(mag >= 5, "red", "blue"),
popup = ~paste("Magnitude:", mag, "<br>", "Depth:", depth, "km")
) %>%
setView(lng = 180, lat = -20, zoom = 4)
# Tạo bản đồ động đất
leaflet(quakes) %>%
addTiles() %>%
addCircles(
lat = ~lat, lng = ~long, weight = 1, radius = ~mag * 5000,
color = ~ifelse(mag >= 5, "red", "blue"),
popup = ~paste("Magnitude:", mag, "<br>", "Depth:", depth, "km")
) %>%
setView(lng = 180, lat = -20, zoom = 4)
# Tạo bản đồ động đất
leaflet(quakes) %>%
addTiles() %>%
addCircles(
lat = ~lat, lng = ~long, weight = 1, radius = ~mag * 5000,
color = ~ifelse(mag>=5, "red", "blue"),
popup = ~paste("Magnitude:", mag, "<br>", "Depth:", depth, "km")) %>%
setView(lng = 180, lat = -20, zoom = 4)
library(dplyr)
# Tạo bản đồ động đất
leaflet(quakes) %>%
addTiles() %>%
addCircles(
lat = ~lat, lng = ~long, weight = 1, radius = ~mag * 5000,
color = ~ifelse(mag>=5, "red", "blue"),
popup = ~paste("Magnitude:", mag, "<br>", "Depth:", depth, "km")) %>%
setView(lng = 180, lat = -20, zoom = 4)
library(dplyr)
# Tạo bản đồ động đất
leaflet(quakes) %>%
addTiles() %>%
addCircles(
lat = ~lat, lng = ~long, weight = 1, radius = ~mag * 5000,
color = ~ifelse(mag>=5, "red", "blue"),
popup = ~paste("Magnitude:", mag, "<br>", "Depth:", depth, "km")) %>%
setView(lng = 180, lat = -20, zoom = 4)
# Tạo bản đồ động đất
leaflet(quakes) %>%
addTiles() %>%
addCircles(
lat = ~lat, lng = ~long, weight = 1, radius = ~mag * 5000,
color = ~ifelse(mag>=5, "red", "blue"),
popup = ~paste("Magnitude:", mag, "<br>", "Depth:", depth, "km")) %>%
setView(lng = 180, lat = -20, zoom = 4)
# Tạo bản đồ động đất
leaflet(quakes) %>%
addTiles() %>%
addCircles(
lat = ~lat, lng = ~long, weight = 1, radius = ~mag * 5000,
color = ~ifelse(mag>=5, "red", "blue"),
popup = ~paste("Magnitude:", mag, "<br>", "Depth:", depth, "km")) %>%
setView(lng = 180, lat = -20, zoom = 4)
# Tạo bản đồ động đất
# Install leaflet if not already installed
if (!require(leaflet)) install.packages("leaflet")
# Load the leaflet library
library(leaflet)
# Tạo bản đồ động đất
leaflet(quakes) %>%
addTiles() %>%
addCircles(
lat = ~lat, lng = ~long, weight = 1, radius = ~mag * 5000,
color = ~ifelse(mag >= 5, "red", "blue"),
popup = ~paste("Magnitude:", mag, "<br>", "Depth:", depth, "km")
) %>%
setView(lng = 180, lat = -20, zoom = 4)
install.packages("cluster")
library(cluster)
library(cluster)
library(cluster)
library(cluster)
library(cluster)
library(cluster)
library(cluster)
library(cluster)
library(cluster)
library(cluster)
library(cluster)
library(cluster)
library(cluster)
library(cluster)
library(ggplot2)
library(ggplot2)
# dữ liệu cho phân cụm
quakes_data <- quakes[, c("lat", "long", "depth")]
# Tạo mô hình phân cụm K-means
set.seed(123)
kmeans_result <- kmeans(quakes_data, centers = 3, nstart = 25)
# Thêm nhãn cụm vào dữ liệu
quakes$cluster <- as.factor(kmeans_result$cluster)
# Vẽ biểu đồ phân cụm
ggplot(quakes, aes(x = long, y = lat, color = cluster)) +
geom_point() +
labs(title = "Phân cụm các điểm động đất")
# dữ liệu cho phân cụm
quakes_data <- quakes[, c("lat", "long", "depth")]
# Tạo mô hình phân cụm K-means
set.seed(123)
kmeans_result <- kmeans(quakes_data, centers = 3, nstart = 25)
# Thêm nhãn cụm vào dữ liệu
quakes$cluster <- as.factor(kmeans_result$cluster)
# Vẽ biểu đồ phân cụm
ggplot(quakes, aes(x = long, y = lat, color = cluster)) +
geom_point() +
labs(title = "Phân cụm các điểm động đất")
x = "kinh độ",
# dữ liệu cho phân cụm
quakes_data <- quakes[, c("lat", "long", "depth")]
# Tạo mô hình phân cụm K-means
set.seed(123)
kmeans_result <- kmeans(quakes_data, centers = 3, nstart = 25)
# Thêm nhãn cụm vào dữ liệu
quakes$cluster <- as.factor(kmeans_result$cluster)
# Vẽ biểu đồ phân cụm
ggplot(quakes, aes(x = long, y = lat, color = cluster)) +
geom_point() +
labs(title = "Phân cụm các điểm động đất"),
# dữ liệu cho phân cụm
quakes_data <- quakes[, c("lat", "long", "depth")]
# Tạo mô hình phân cụm K-means
set.seed(123)
kmeans_result <- kmeans(quakes_data, centers = 3, nstart = 25)
# Thêm nhãn cụm vào dữ liệu
quakes$cluster <- as.factor(kmeans_result$cluster)
# Vẽ biểu đồ phân cụm
ggplot(quakes, aes(x = long, y = lat, color = cluster)) +
geom_point() +
labs(title = "Phân cụm các điểm động đất"),
# dữ liệu cho phân cụm
quakes_data <- quakes[, c("lat", "long", "depth")]
# Tạo mô hình phân cụm K-means
set.seed(123)
kmeans_result <- kmeans(quakes_data, centers = 3, nstart = 25)
# Thêm nhãn cụm vào dữ liệu
quakes$cluster <- as.factor(kmeans_result$cluster)
# Vẽ biểu đồ phân cụm
ggplot(quakes, aes(x = long, y = lat, color = cluster)) +
geom_point() +
labs(title = "Phân cụm các điểm động đất"),
# dữ liệu cho phân cụm
quakes_data <- quakes[, c("lat", "long", "depth")]
# Tạo mô hình phân cụm K-means
set.seed(123)
kmeans_result <- kmeans(quakes_data, centers = 3, nstart = 25)
# Thêm nhãn cụm vào dữ liệu
quakes$cluster <- as.factor(kmeans_result$cluster)
# Vẽ biểu đồ phân cụm
ggplot(quakes, aes(x = long, y = lat, color = cluster)) +
geom_point() +
labs(title = "Phân cụm các điểm động đất"),
# dữ liệu cho phân cụm
quakes_data <- quakes[, c("lat", "long", "depth")]
# Tạo mô hình phân cụm K-means
set.seed(123)
kmeans_result <- kmeans(quakes_data, centers = 3, nstart = 25)
# Thêm nhãn cụm vào dữ liệu
quakes$cluster <- as.factor(kmeans_result$cluster)
# Vẽ biểu đồ phân cụm
ggplot(quakes, aes(x = long, y = lat, color = cluster)) +
geom_point() +
labs(title = "Phân cụm các điểm động đất",
x = "kinh độ",
y = "Vĩ độ)" +
theme_minimal()
# dữ liệu cho phân cụm
quakes_data <- quakes[, c("lat", "long", "depth")]
# Tạo mô hình phân cụm K-means
set.seed(123)
kmeans_result <- kmeans(quakes_data, centers = 3, nstart = 25)
# Thêm nhãn cụm vào dữ liệu
quakes$cluster <- as.factor(kmeans_result$cluster)
# Vẽ biểu đồ phân cụm
ggplot(quakes, aes(x = long, y = lat, color = cluster)) +
geom_point() +
labs(title = "Phân cụm các điểm động đất",
x = "kinh độ",
y = "Vĩ độ") +
theme_minimal()
install.packages("caret")
library(caret)
set.seed(123)
train_index <- createDataPartition(quakes$mag, p = 0.8, list = FALSE)
train_data <- quakes[train_index, ]
test_data <- quakes[-train_index, ]
# Huấn luyện mô hình hồi quy tuyến tính
# ~ lat + long + depth  dự đoán `mag` dựa trên `lat`, `long`, và `depth`
model <- lm(mag ~ lat + long +depth, data = train_data)
#Sử dụng mô hình đã huấn luyện đi dự đoán độ lớn của các trần động đất trong tập kiểm tra
prediction <- predict(model, test_data)
#đánh giá mô hình
# Sử dụng mô hình đã huấn luyện để dự đoán độ lớn của các trận động đất trong tập kiểm tra
# Đánh giá mô hình
# Lấy giá trị thực tế của độ lớn từ tập kiểm tra
# Tạo data.frame chứa giá trị thực tế và giá trị dự đoán để so sánh
# Sai số tuyệt đối trung bình giữa giá trị thực tế và giá trị dự đoán
#tính sai số trung bình theo cùng đơn vị đo lường như giá trị thực tế
# In kết quả đánh giá mô hình
set.seed(123)
train_index <- createDataPartition(quakes$mag, p = 0.8, list = FALSE)
train_data <- quakes[train_index, ]
test_data <- quakes[-train_index, ]
# Huấn luyện mô hình hồi quy tuyến tính
# ~ lat + long + depth  dự đoán `mag` dựa trên `lat`, `long`, và `depth`
model <- lm(mag ~ lat + long +depth, data = train_data)
#Sử dụng mô hình đã huấn luyện đi dự đoán độ lớn của các trần động đất trong tập kiểm tra
prediction <- predict(model, test_data)
#đánh giá mô hình
#lấy giá trị thực tế của độ lớn từ tập kiểm tra
actuals <- test_data$mag
#tạo data.frame chưa giá trị thực tế và giá trị dự đoán đế so sánh
results <- data.frame(Actual = actuals, Predicted = predictions)
set.seed(123)
train_index <- createDataPartition(quakes$mag, p = 0.8, list = FALSE)
train_data <- quakes[train_index, ]
test_data <- quakes[-train_index, ]
# Huấn luyện mô hình hồi quy tuyến tính
# ~ lat + long + depth  dự đoán `mag` dựa trên `lat`, `long`, và `depth`
model <- lm(mag ~ lat + long +depth, data = train_data)
#Sử dụng mô hình đã huấn luyện đi dự đoán độ lớn của các trần động đất trong tập kiểm tra
prediction <- predict(model, test_data)
#đánh giá mô hình
#lấy giá trị thực tế của độ lớn từ tập kiểm tra
actuals <- test_data$mag
#tạo data.frame chưa giá trị thực tế và giá trị dự đoán đế so sánh
results <- data.frame(Actual = actuals, Predicted = predictions)
