plot(cars)
install.packages("RODBC")
install.packages("odbc")
install.packages('readr')
install.packages("DBI")
library(RODBC)
library(odbc)
library(readr)
library(DBI)
# Thay đổi các thông số kết nối tùy theo cài đặt của bạn
server <- "localhost, 1433"  # Địa chỉ máy chủ SQL Server
database <- "ChicagoPublicSchools_test1"       # Tên cơ sở dữ liệu
user <- "sa"                 # Tên người dùng
password <- "123456789"    # Mật khẩu
connection_string <- paste0("Driver={SQL Server};",
"Server=", server, ";",
"Database=", database, ";",
"Uid=", user, ";",
"Pwd=", password, ";",
"charset=UTF-8")
# Kết nối đến cơ sở dữ liệu
con <- dbConnect(odbc::odbc(), .connection_string = connection_string)
# Kiểm tra kết nối
if (dbIsValid(con)) {
cat("Kết nối thành công đến cơ sở dữ liệu ", database, ".\n")
} else {
cat("Kết nối không thành công.\n")
}
# Đọc file CSV
chicago_schools <- read.csv("ChicagoPublicSchools.csv")
dbWriteTable(con, "chicago_public_schools", chicago_schools, overwrite = TRUE)
# Kiểm tra số lượng bản ghi đã được nhập
row_count <- dbGetQuery(con, "SELECT COUNT(*) AS count FROM chicago_public_schools")
cat("Số lượng bản ghi đã được nhập:", row_count$count, "\n")
# In ra thông báo khi quá trình nhập dữ liệu hoàn thành
cat("Quá trình nhập dữ liệu đã hoàn thành thành công!\n")
# Convert Graduation_Rate column to numeric
chicago_schools_filtered$Graduation_Rate <- as.numeric(chicago_schools_filtered$Graduation_Rate)
library(dplyr)
colnames(chicago_schools)
average_safety_scores <- chicago_schools %>%
group_by(Elementary..Middle..or.High.School) %>%
summarise(avg_safety_score = mean(SAFETY_SCORE, na.rm = TRUE)) %>%
arrange(desc(avg_safety_score))
# In ra kết quả
print(average_safety_scores)
healthy_school_count <- chicago_schools %>%
filter(HEALTHY_SCHOOL_CERTIFIED == "Yes") %>%
summarise(count = n())
# In ra kết quả
print(healthy_school_count)
highest_algebra_participation <- chicago_schools %>%
filter(!is.na(Students_Taking__Algebra__)) %>%
mutate(Participation_Rate = as.numeric(Students_Taking__Algebra__)) %>%
arrange(desc(Participation_Rate)) %>%
slice(1)
# In ra kết quả
print(highest_algebra_participation)
average_act_score <- chicago_schools %>%
filter(Elementary..Middle..or.High.School == "HS") %>%
mutate(ACT_Score = as.numeric(ifelse(X11th.Grade.Average.ACT..2011. == "NDA", NA, X11th.Grade.Average.ACT..2011.))) %>%
summarise(avg_ACT = mean(ACT_Score, na.rm = TRUE))
# In ra kết quả
print(average_act_score)
schools_per_community <- chicago_schools %>%
group_by(COMMUNITY_AREA_NAME) %>%
summarise(Number_of_Schools = n())
# In ra kết quả
print(schools_per_community)
highest_college_enrollment <- chicago_schools %>%
filter(!is.na(COLLEGE_ENROLLMENT)) %>%
arrange(desc(COLLEGE_ENROLLMENT)) %>%
slice(1)
# In ra kết quả
print(highest_college_enrollment)
average_environment_score <- chicago_schools %>%
group_by(Network_Manager) %>%
summarise(avg_environment_score = mean(Environment_Score, na.rm = TRUE)) %>%
arrange(desc(avg_environment_score))
# In ra kết quả
print(average_environment_score)
level_1_count <- chicago_schools %>%
filter(CPS_Performance_Policy_Level == "Level 1") %>%
summarise(Number_of_Level_1_Schools = n())
# In ra kết quả
print(level_1_count)
college_enrollment_by_community <- chicago_schools %>%
group_by(COMMUNITY_AREA_NAME) %>%
summarise(total_college_enrollment = sum(COLLEGE_ENROLLMENT, na.rm = TRUE)) %>%
arrange(desc(total_college_enrollment))
# In ra kết quả
print(college_enrollment_by_community)
